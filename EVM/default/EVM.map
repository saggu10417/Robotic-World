Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
                              lcd_hd44780_avr.o (__divmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              lcd_hd44780_avr.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD EVM.o
LOAD lcd_hd44780_avr.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x5fa
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054       0x5e EVM.o
                0x000000b2                . = ALIGN (0x2)
                0x000000b2                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000b2        0x0 linker stubs
 *(.trampolines*)
                0x000000b2                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000b2                __ctors_start = .
 *(.ctors)
                0x000000b2                __ctors_end = .
                0x000000b2                __dtors_start = .
 *(.dtors)
                0x000000b2                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000b2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x000000b2                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000b2        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000be       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x000000be                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000d4        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x000000dc        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x000000dc                __vector_1
                0x000000dc                __vector_12
                0x000000dc                __bad_interrupt
                0x000000dc                __vector_6
                0x000000dc                __vector_3
                0x000000dc                __vector_11
                0x000000dc                __vector_13
                0x000000dc                __vector_17
                0x000000dc                __vector_19
                0x000000dc                __vector_7
                0x000000dc                __vector_5
                0x000000dc                __vector_4
                0x000000dc                __vector_9
                0x000000dc                __vector_2
                0x000000dc                __vector_15
                0x000000dc                __vector_8
                0x000000dc                __vector_14
                0x000000dc                __vector_10
                0x000000dc                __vector_16
                0x000000dc                __vector_18
                0x000000dc                __vector_20
 .text          0x000000e0      0x1fe EVM.o
                0x000000e0                main
 .text          0x000002de      0x2ca lcd_hd44780_avr.o
                0x00000430                LCDWriteString
                0x00000396                LCDInit
                0x00000464                LCDWriteFString
                0x0000033a                LCDByte
                0x000002de                LCDBusyLoop
                0x000004a6                LCDWriteInt
                0x00000584                LCDGotoXY
 .text          0x000005a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .text          0x000005a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x000005a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x000005a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x000005a8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000005a8       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
                0x000005a8                __divmodhi4
                0x000005a8                _div
 .text.libgcc   0x000005ce        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000005ce        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000005ce       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x000005ce                __udivmodhi4
                0x000005f6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000005f6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000005f6                exit
                0x000005f6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000005f6        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000005fa                _etext = .

.data           0x00800060       0x40 load address 0x000005fa
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 EVM.o
 .data          0x00800060       0x40 lcd_hd44780_avr.o
                0x00800060                __cgram
 .data          0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .data          0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000a0                . = ALIGN (0x2)
                0x008000a0                _edata = .
                0x008000a0                PROVIDE (__data_end, .)

.bss            0x008000a0        0x0
                0x008000a0                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x008000a0        0x0 EVM.o
 .bss           0x008000a0        0x0 lcd_hd44780_avr.o
 .bss           0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .bss           0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000a0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x008000a0                PROVIDE (__bss_end, .)
                0x000005fa                __data_load_start = LOADADDR (.data)
                0x0000063a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000a0        0x0
                0x008000a0                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000a0                PROVIDE (__noinit_end, .)
                0x008000a0                _end = .
                0x008000a0                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 EVM.o
 .debug_aranges
                0x00000020       0x20 lcd_hd44780_avr.o

.debug_pubnames
                0x00000000       0xa6
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b EVM.o
 .debug_pubnames
                0x0000001b       0x8b lcd_hd44780_avr.o

.debug_info     0x00000000      0xc33
 *(.debug_info)
 .debug_info    0x00000000      0x4aa EVM.o
 .debug_info    0x000004aa      0x789 lcd_hd44780_avr.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x33f
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x11d EVM.o
 .debug_abbrev  0x0000011d      0x222 lcd_hd44780_avr.o

.debug_line     0x00000000      0x835
 *(.debug_line)
 .debug_line    0x00000000      0x326 EVM.o
 .debug_line    0x00000326      0x50f lcd_hd44780_avr.o

.debug_frame    0x00000000       0xa0
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 EVM.o
 .debug_frame   0x00000020       0x80 lcd_hd44780_avr.o

.debug_str      0x00000000      0x182
 *(.debug_str)
 .debug_str     0x00000000       0xb2 EVM.o
                                 0xeb (size before relaxing)
 .debug_str     0x000000b2       0xd0 lcd_hd44780_avr.o
                                0x1b4 (size before relaxing)

.debug_loc      0x00000000      0x630
 *(.debug_loc)
 .debug_loc     0x00000000      0x2a0 EVM.o
 .debug_loc     0x000002a0      0x390 lcd_hd44780_avr.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(EVM.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0xd8
 .debug_ranges  0x00000000       0x48 EVM.o
 .debug_ranges  0x00000048       0x90 lcd_hd44780_avr.o
